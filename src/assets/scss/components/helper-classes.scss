// Table helpers

@mixin table-helpers {

  th, td {

    &.shrink, &.compact, &.check {
      width: 1px;
      white-space: nowrap;
    }

    &.compact:not(:last-child) {
      padding-right: $global-padding * 2;
    }

    &.center {
      text-align: center;

      &.compact {
        padding-left: $global-padding * 2;
        padding-right: $global-padding * 2;
      }
    }

    &.expand {
      width: 100%;
    }

    &.check {

      input {
        margin: 0;
      }
    }

    &.actions {
      white-space: nowrap;

      a {
        margin: 0;
        padding: ($global-padding / 4) ($global-padding / 3.5);

        &:not(:last-child) {
          margin-right: $global-padding / 4;
        }
      }
    }
  }
}

@mixin form-helpers {
  #{text-inputs()}, select {

    &.large {
      $fsize: 1.2rem;
      $height: ($fsize * unitless-calc($input-line-height)) + (get-side($input-padding, 'top') + get-side($input-padding, 'bottom')) - rem-calc(1);

      font-size: $fsize;
      height: $height;
    }

    &.small {
      $fsize: .8rem;
      $height: ($fsize * unitless-calc($input-line-height)) + (get-side($input-padding, 'top') + get-side($input-padding, 'bottom')) - rem-calc(1);

      font-size: $fsize;
      height: $height;
    }
  }

  .input-group-list {

    #{text-inputs()}, select, textarea {
      margin-bottom: -1px;

      &:active, &:focus {
        position: relative;
        z-index: 1;
      }
    }
  }
}

@mixin color-helpers {
  @each $attr in (background, background-color, border-color, color) {
    .#{$attr} {

      &-none {
        #{$attr}: none !important;
      }

      @each $name, $color in $foundation-palette {
        &-#{$name} {
          #{$attr}: $color !important;
        }
      }
    }
  }
}

@mixin bedrock-prototype-classes {
  @include table-helpers;
  @include form-helpers;
  @include color-helpers;
}
